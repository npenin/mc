{
  "name": "ref-union",
  "description": "Create ABI-compliant \"union\" instances on top of Buffers",
  "keywords": [
    "union",
    "ref"
  ],
  "version": "0.0.2",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://tootallnate.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/ref-union.git"
  },
  "main": "./lib/union.js",
  "scripts": {
    "test": "node-gyp rebuild --directory test && mocha -gc --reporter spec"
  },
  "dependencies": {
    "debug": "*",
    "ref": "0"
  },
  "devDependencies": {
    "mocha": "*",
    "ref-struct": "*"
  },
  "engines": {
    "node": "*"
  },
  "readme": "ref-union\n=========\n### Create ABI-compliant \"[union][]\" instances on top of Buffers\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref-union.png)](http://travis-ci.org/TooTallNate/ref-union)\n\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref-union\n```\n\n\nExamples\n--------\n\n``` js\nvar ref = require('ref')\nvar Union = require('ref-union')\n\n// a couple typedefs\nvar int = ref.types.int\nvar float = ref.types.float\nvar string = ref.types.CString\n\n// define a Union type with 3 data fields\nvar u_tag = new Union({\n    ival: int\n  , fval: float\n  , sval: string\n})\n\n// the size of the union matches the largest data type in the union type\nu_tag.size === string.size\n\n// and you can create new instances of the union type\nvar tag = new u_tag\ntag.ival = 5\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n[union]: http://wikipedia.org/wiki/Union_(computer_science)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/TooTallNate/ref-union/issues"
  },
  "_id": "ref-union@0.0.2",
  "dist": {
    "shasum": "e602fd918d7d52aed2f8a3bb5f217551b636896d"
  },
  "_from": "ref-union@",
  "_resolved": "https://registry.npmjs.org/ref-union/-/ref-union-0.0.2.tgz"
}
